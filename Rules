#!/usr/bin/env ruby

require 'compass'
require 'zurb-foundation'

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.


# Styling and Javascript Asset Rules
compile '/assets/stylesheets/*/' do
  filter :sass, Compass.sass_engine_options
end

compile '/assets/javascripts/*' do
  filter :erb
  filter :concat_js
  if ENV['NANOC_ENV'] == 'production'
    filter :uglify_js
  end
end

# Do not write partials
route '/assets/stylesheets/_*/' do
    nil
end

route '/assets/stylesheets/*/' do
    item.identifier.chop + '.css'
end

route '/assets/javascript/*' do
  item.identifier.chop + '.js'
end

# Images
compile '/assets/images/*/' do
  if item.binary?
    filter :image_compressor, :pngout => false
  end
end

# Misc Stuff
compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    if item[:extension] == 'haml'
      filter :haml
    else
      filter :erb
    end
    layout 'default'
  end
end

# Move image assets for Foundation Orbit to images so relative_paths work.
route '/assets/images/foundation/orbit/*' do
  item.identifier.gsub(/images/, 'stylesheets').chop + "." + item[:extension]
end

route '/static/*' do
  # /static/foo.html/ → /foo.html
  item.identifier[7..-2]
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end



layout '*', :haml
